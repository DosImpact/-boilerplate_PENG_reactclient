{"version":3,"sources":["Styles/GlobalStyles.js","Styles/Theme.js","components/Icons.js","components/Loader.js","Hooks/useInput.js","components/FatText.js","components/Avatar.js","components/Post/PostPresenter.js","components/Post/PostQueries.js","components/Post/index.js","components/Post/PostContainer.js","Routes/Feed.js","components/Input.js","components/Button.js","Routes/Auth/AuthPresenter.js","Routes/Auth/AuthQueries.js","Routes/Auth/index.js","Routes/Auth/AuthContainer.js","components/FollowButton/FollowButtonQueries.js","components/FollowButton/FollowButtonPresenter.js","components/FollowButton/index.js","components/FollowButton/FollowButtonContainer.js","components/UserCard.js","components/SquarePost.js","Routes/Search/SearchPresenter.js","Routes/Search/SearchQueries.js","Routes/Search/SearchContainer.js","Routes/Profile/ProfilePresenter.js","Routes/Profile/ProfileContainer.js","components/Routes.js","components/Footer.js","SharedQueries.js","components/Header.js","components/App.js","Apollo/LocalState.js","Apollo/Client.js","index.js"],"names":["createGlobalStyle","reset","props","theme","bgColor","blackColor","blueColor","maxWidth","darkGreyColor","lightGreyColor","redColor","darkBlueColor","boxBorder","borderRadius","whiteBox","Compass","xmlns","width","height","viewBox","d","HeartEmpty","CommentFull","HeartFull","fill","User","Comment","Logo","size","Animation","keyframes","Loader","styled","div","defaultValue","useState","value","setValue","onChange","e","target","Text","span","FatText","text","className","Container","number","getSize","url","Avatar","user","name","avatar","location","files","isLiked","likeCount","createdAt","newComment","currentItem","toggleLike","onKeyPress","comments","selfComments","caption","Post","Header","UserColumn","to","Location","Files","console","log","map","file","index","File","key","id","src","showing","Meta","Buttons","onClick","Caption","Comments","comment","Timestamp","Textarea","placeholder","header","TextareaAutosize","Button","ul","li","TOGGLE_LIKE","gql","ADD_COMMENT","PostContainer","isLikedS","setIsLiked","likeCountS","setLikeCount","setCurrentItem","setSelfComments","useInput","useMutation","variables","postId","toggleLikeMutation","addCommentMutation","useEffect","totalFiles","length","setTimeout","slide","event","a","which","preventDefault","addComment","data","toast","error","PostPresenter","FEED_QUERY","useQuery","loading","Wrapper","seeFeed","post","input","Input","required","type","button","Box","StateChanger","Link","Form","setAction","action","firstName","password","lastName","email","onSubmit","secret","LOG_IN","CREATE_ACCOUNT","CONFIRM_SECRET","LOCAL_LOG_IN","AuthContainer","update","_","requestSecret","success","createAccountMutation","confirmSecretMutation","localLogInMutation","createAccount","message","token","confirmSecret","undefined","Error","AuthPresenter","FOLLOW","UNFOLLOW","isFollowing","FollowButtonContainer","isFollowingS","setIsFollowing","followMutation","unfollowMutation","FollowButtonPresenter","Card","EAvatar","ELink","UserCard","isSelf","FollowButton","Overlay","bg","Number","NumberText","SquarePost","commentCount","Section","PostSection","SearchPresenter","searchTerm","searchUser","searchPost","SEARCH","withRouter","term","search","split","skip","HeaderColumn","UsernameRow","Username","Counts","Count","FullName","Bio","p","Posts","logOut","seeUser","fullName","bio","followingCount","followersCount","postsCount","posts","String","GET_USER","LOG_OUT","LoggedInRoutes","username","match","params","ProfilePresenter","exact","path","component","Feed","LoggedOutRoutes","Auth","from","AppRouter","isLoggedIn","Footer","footer","List","ListItem","Copyright","href","Date","getFullYear","ME","history","HeaderWrapper","push","SearchInput","HeaderLink","me","QUERY","Theme","GlobalStyles","Routes","position","POSITION","BOTTOM_LEFT","defaults","Boolean","localStorage","getItem","resolvers","Mutation","logUserIn","cache","setItem","writeData","logUserOut","__","removeItem","window","ApolloClient","uri","clientState","headers","Authorization","ReactDOM","render","client","Client","App","document","getElementById"],"mappings":"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","file":"static/js/main.64706f8c.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nexport default createGlobalStyle`\r\n    ${reset};\r\n    @import url('https://fonts.googleapis.com/css?family=Open+Sans:400,600,700');\r\n    *{\r\n        box-sizing: border-box;\r\n    }\r\n    body{\r\n        background-color:${props => props.theme.bgColor};\r\n        color: ${props => props.theme.blackColor};\r\n        font-size:14px;\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        padding-top: 140px;\r\n    }\r\n    a {\r\n        color:${props => props.theme.blueColor};\r\n        text-decoration:none;\r\n    }\r\n    input:focus{\r\n        outline:none;\r\n    }\r\n`;\r\n","const BOX_BORDER = \"1px solid #e6e6e6\";\r\nconst BORDER_RADIUS = \"4px\";\r\n\r\nexport default {\r\n  maxWidth: \"935px\",\r\n  bgColor: \"#FAFAFA\",\r\n  blackColor: \"#262626\",\r\n  darkGreyColor: \"#999\",\r\n  lightGreyColor: \"#c7c7c7\",\r\n  redColor: \"#ED4956\",\r\n  blueColor: \"#3897f0\",\r\n  darkBlueColor: \"#003569\",\r\n  boxBorder: \"1px solid #e6e6e6\",\r\n  borderRadius: \"4px\",\r\n  whiteBox: `border:${BOX_BORDER};\r\n             border-radius:${BORDER_RADIUS};\r\n             background-color:white;\r\n            `\r\n};\r\n/**\r\n * 색깔 테마들을 전부 빼두는것은 좋은 방법이다.\r\n */\r\n","import React from \"react\";\r\n//https://iconmonstr.com/instagram-11-svg/\r\nexport const Compass = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm6 5.999l-5.621 2.986c-.899-.104-1.806.191-2.474.859-.662.663-.95 1.561-.862 2.428l-3.043 5.728 5.724-3.042c.884.089 1.772-.205 2.432-.865.634-.634.969-1.524.859-2.473l2.985-5.621zm-5.97 7.22c-.689 0-1.25-.559-1.25-1.249-.001-.691.559-1.251 1.25-1.25.69 0 1.25.56 1.25 1.25-.001.689-.56 1.249-1.25 1.249z\" />\r\n  </svg>\r\n);\r\n\r\nexport const HeartEmpty = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <path d=\"M6.28 3c3.236.001 4.973 3.491 5.72 5.031.75-1.547 2.469-5.021 5.726-5.021 2.058 0 4.274 1.309 4.274 4.182 0 3.442-4.744 7.851-10 13-5.258-5.151-10-9.559-10-13 0-2.676 1.965-4.193 4.28-4.192zm.001-2c-3.183 0-6.281 2.187-6.281 6.192 0 4.661 5.57 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-4.011-3.097-6.182-6.274-6.182-2.204 0-4.446 1.042-5.726 3.238-1.285-2.206-3.522-3.248-5.719-3.248z\" />\r\n  </svg>\r\n);\r\nexport const CommentFull = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <path d=\"M12 1c-6.627 0-12 4.364-12 9.749 0 3.131 1.817 5.917 4.64 7.7.868 2.167-1.083 4.008-3.142 4.503 2.271.195 6.311-.121 9.374-2.498 7.095.538 13.128-3.997 13.128-9.705 0-5.385-5.373-9.749-12-9.749z\" />\r\n  </svg>\r\n);\r\n\r\nexport const HeartFull = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"#ED4956\"\r\n  >\r\n    <path d=\"M12 4.248c-3.148-5.402-12-3.825-12 2.944 0 4.661 5.571 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-6.792-8.875-8.306-12-2.944z\" />\r\n  </svg>\r\n);\r\n\r\nexport const User = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <path d=\"M12 2c2.757 0 5 2.243 5 5.001 0 2.756-2.243 5-5 5s-5-2.244-5-5c0-2.758 2.243-5.001 5-5.001zm0-2c-3.866 0-7 3.134-7 7.001 0 3.865 3.134 7 7 7s7-3.135 7-7c0-3.867-3.134-7.001-7-7.001zm6.369 13.353c-.497.498-1.057.931-1.658 1.302 2.872 1.874 4.378 5.083 4.972 7.346h-19.387c.572-2.29 2.058-5.503 4.973-7.358-.603-.374-1.162-.811-1.658-1.312-4.258 3.072-5.611 8.506-5.611 10.669h24c0-2.142-1.44-7.557-5.631-10.647z\" />\r\n  </svg>\r\n);\r\n\r\nexport const Comment = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <path d=\"M12 3c5.514 0 10 3.476 10 7.747 0 4.272-4.48 7.748-9.986 7.748-.62 0-1.092-.046-1.759-.097-1 .776-1.774 1.403-3.485 1.962.26-1.383-.113-2.259-.514-3.259-2.383-1.505-4.256-3.411-4.256-6.354 0-4.271 4.486-7.747 10-7.747zm0-2c-6.627 0-12 4.363-12 9.747 0 3.13 1.816 5.916 4.641 7.699.867 2.167-1.084 4.008-3.143 4.502 3.085.266 6.776-.481 9.374-2.497 7.08.54 13.128-3.988 13.128-9.704 0-5.384-5.373-9.747-12-9.747z\" />\r\n  </svg>\r\n);\r\n\r\nexport const Logo = ({ size = 24 }) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={size}\r\n    height={size}\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <path d=\"M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z\" />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { Logo } from \"./Icons\";\r\n\r\nconst Animation = keyframes`\r\n    0%{\r\n        opacity:0\r\n    }\r\n    50%{\r\n        opacity:1\r\n    }\r\n    100%{\r\n        opacity:0;\r\n    }\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  animation: ${Animation} 1s linear infinite;\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nexport default () => (\r\n  <Loader>\r\n    <Logo size={36} />\r\n  </Loader>\r\n);\r\n","import { useState } from \"react\";\r\n\r\nexport default defaultValue => {\r\n  const [value, setValue] = useState(defaultValue);\r\n\r\n  const onChange = e => {\r\n    const {\r\n      target: { value }\r\n    } = e;\r\n    setValue(value);\r\n  };\r\n\r\n  return { value, onChange, setValue };\r\n};\r\n/**\r\n * userInput에 값을 퉤 던지면, 그 값과, 바꿀수 있는 함수를 준다.\r\n */\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Text = styled.span`\r\n  font-weight: 600;\r\n`;\r\n//is for styled-component override?\r\nconst FatText = ({ text, className }) => (\r\n  <Text className={className}>{text}</Text>\r\n);\r\n\r\nFatText.propTypes = {\r\n  text: PropTypes.string.isRequired\r\n};\r\n\r\nexport default FatText;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst getSize = size => {\r\n  let number;\r\n  if (size === \"sm\") {\r\n    number = 30;\r\n  } else if (size === \"md\") {\r\n    number = 50;\r\n  } else if (size === \"lg\") {\r\n    number = 150;\r\n  }\r\n  return `\r\n        width:${number}px;\r\n        height:${number}px;\r\n        `;\r\n};\r\n\r\nconst Container = styled.div`\r\n  ${props => getSize(props.size)}\r\n  background-image:url(${props => props.url});\r\n  background-size:cover;\r\n  border-radius:50%;\r\n`;\r\n\r\nconst Avatar = ({ size = \"sm\", url, className }) => (\r\n  <Container className={className} size={size} url={url} />\r\n);\r\n\r\nAvatar.propTypes = {\r\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n  url: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FatText from \"../FatText\";\r\nimport Avatar from \"../Avatar\";\r\nimport { HeartFull, HeartEmpty, Comment as CommentIcon } from \"../Icons\";\r\nimport TextareaAutosize from \"react-autosize-textarea\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default ({\r\n  user: { name, avatar },\r\n  location,\r\n  files,\r\n  isLiked,\r\n  likeCount,\r\n  createdAt,\r\n  newComment,\r\n  currentItem,\r\n  toggleLike,\r\n  onKeyPress,\r\n  comments,\r\n  selfComments,\r\n  caption\r\n}) => (\r\n  <Post>\r\n    <Header>\r\n      <Avatar size=\"sm\" url={avatar} />\r\n      <UserColumn>\r\n        <Link to={`/${name}`}>\r\n          <FatText text={name} />\r\n        </Link>\r\n        <Location>{location}</Location>\r\n      </UserColumn>\r\n    </Header>\r\n    <Files>\r\n      {console.log(files)}\r\n      {files &&\r\n        files.map((file, index) => (\r\n          <File key={file.id} src={file.url} showing={index === currentItem} />\r\n        ))}\r\n    </Files>\r\n    <Meta>\r\n      <Buttons>\r\n        <Button onClick={toggleLike}>\r\n          {isLiked ? <HeartFull /> : <HeartEmpty />}\r\n        </Button>\r\n        <Button>\r\n          <CommentIcon />\r\n        </Button>\r\n      </Buttons>\r\n      <FatText text={likeCount === 1 ? \"1 like\" : `${likeCount} likes`} />\r\n      <Caption>\r\n        <FatText text={name} /> {caption}\r\n      </Caption>\r\n      {comments && (\r\n        <Comments>\r\n          {comments.map(comment => (\r\n            <Comment key={comment.id}>\r\n              <FatText text={comment.user.name} />\r\n              {comment.text}\r\n            </Comment>\r\n          ))}\r\n          {selfComments.map(comment => (\r\n            <Comment key={comment.id}>\r\n              <FatText text={comment.user.name} />\r\n              {comment.text}\r\n            </Comment>\r\n          ))}\r\n        </Comments>\r\n      )}\r\n      <Timestamp>{createdAt}</Timestamp>\r\n      <Textarea\r\n        onKeyPress={onKeyPress}\r\n        placeholder={\"Add a comment...\"}\r\n        value={newComment.value}\r\n        onChange={newComment.onChange}\r\n      />\r\n    </Meta>\r\n  </Post>\r\n);\r\n\r\nconst Post = styled.div`\r\n  ${props => props.theme.whiteBox};\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin-bottom: 25px;\r\n  user-select: none;\r\n  a {\r\n    color: inherit;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  padding: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst UserColumn = styled.div`\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Location = styled.span`\r\n  display: block;\r\n  margin-top: 5px;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Files = styled.div`\r\n  position: relative;\r\n  padding-bottom: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst File = styled.div`\r\n  max-width: 100%;\r\n  width: 100%;\r\n  height: 600px;\r\n  position: absolute;\r\n  top: 0;\r\n  background-image: url(${props => props.src});\r\n  background-size: cover;\r\n  background-position: center;\r\n  opacity: ${props => (props.showing ? 1 : 0)};\r\n  transition: opacity 0.5s linear;\r\n`;\r\n\r\nconst Textarea = styled(TextareaAutosize)`\r\n  border: none;\r\n  width: 100%;\r\n  resize: none;\r\n  font-size: 14px;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst Button = styled.span`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Meta = styled.div`\r\n  padding: 15px;\r\n`;\r\n\r\nconst Buttons = styled.div`\r\n  ${Button} {\r\n    &:first-child {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Timestamp = styled.span`\r\n  font-weight: 400;\r\n  text-transform: uppercase;\r\n  opacity: 0.5;\r\n  display: block;\r\n  font-size: 12px;\r\n  margin: 10px 0px;\r\n  padding-bottom: 10px;\r\n  border-bottom: ${props => props.theme.lightGreyColor} 1px solid;\r\n`;\r\n\r\nconst Comments = styled.ul`\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst Comment = styled.li`\r\n  margin-bottom: 7px;\r\n  span {\r\n    margin-right: 5px;\r\n  }\r\n`;\r\nconst Caption = styled.div`\r\n  margin: 10px 0px;\r\n`;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const TOGGLE_LIKE = gql`\r\n  mutation toggelLike($postId: String!) {\r\n    toggleLike(postId: $postId)\r\n  }\r\n`;\r\n\r\nexport const ADD_COMMENT = gql`\r\n  mutation addComment($postId: String!, $text: String!) {\r\n    addComment(postId: $postId, text: $text) {\r\n      id\r\n      text\r\n      user {\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import PostContainer from \"./PostContainer\";\r\n\r\nexport default PostContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport useInput from \"../../Hooks/useInput\";\r\nimport PostPresenter from \"./PostPresenter\";\r\nimport { useMutation } from \"react-apollo-hooks\";\r\nimport { TOGGLE_LIKE, ADD_COMMENT } from \"./PostQueries\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst PostContainer = ({\r\n  id,\r\n  user,\r\n  files,\r\n  likeCount,\r\n  isLiked,\r\n  comments,\r\n  createdAt,\r\n  caption,\r\n  location\r\n}) => {\r\n  const [isLikedS, setIsLiked] = useState(isLiked);\r\n  const [likeCountS, setLikeCount] = useState(likeCount);\r\n  const [currentItem, setCurrentItem] = useState(0);\r\n  const [selfComments, setSelfComments] = useState([]);\r\n  const comment = useInput(\"\");\r\n  const [toggleLikeMutation] = useMutation(TOGGLE_LIKE, {\r\n    variables: { postId: id }\r\n  });\r\n  const [addCommentMutation] = useMutation(ADD_COMMENT, {\r\n    variables: { postId: id, text: comment.value }\r\n  });\r\n\r\n  const slide = () => {\r\n    const totalFiles = files.length;\r\n    if (currentItem === totalFiles - 1) {\r\n      setTimeout(() => setCurrentItem(0), 3000);\r\n    } else {\r\n      setTimeout(() => setCurrentItem(currentItem + 1), 3000);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    slide();\r\n  }, [currentItem]);\r\n\r\n  const toggleLike = () => {\r\n    toggleLikeMutation();\r\n    if (isLikedS === true) {\r\n      setIsLiked(false);\r\n      setLikeCount(likeCountS - 1);\r\n    } else {\r\n      setIsLiked(true);\r\n      setLikeCount(likeCountS + 1);\r\n    }\r\n  };\r\n\r\n  const onKeyPress = async event => {\r\n    const { which } = event;\r\n    if (which === 13) {\r\n      event.preventDefault();\r\n      try {\r\n        const {\r\n          data: { addComment }\r\n        } = await addCommentMutation();\r\n        setSelfComments([...selfComments, addComment]);\r\n        comment.setValue(\"\");\r\n      } catch {\r\n        toast.error(\"Cant send comment\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PostPresenter\r\n      user={user}\r\n      files={files}\r\n      likeCount={likeCountS}\r\n      location={location}\r\n      caption={caption}\r\n      isLiked={isLikedS}\r\n      comments={comments}\r\n      createdAt={createdAt}\r\n      newComment={comment}\r\n      setIsLiked={setIsLiked}\r\n      setLikeCount={setLikeCount}\r\n      currentItem={currentItem}\r\n      toggleLike={toggleLike}\r\n      onKeyPress={onKeyPress}\r\n      selfComments={selfComments}\r\n    />\r\n  );\r\n};\r\n\r\nPostContainer.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  user: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string.isRequired\r\n  }).isRequired,\r\n  files: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      url: PropTypes.string.isRequired\r\n    })\r\n  ).isRequired,\r\n  likeCount: PropTypes.number.isRequired,\r\n  isLiked: PropTypes.bool.isRequired,\r\n  comments: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      text: PropTypes.string.isRequired,\r\n      user: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired\r\n      }).isRequired\r\n    })\r\n  ).isRequired,\r\n  caption: PropTypes.string.isRequired,\r\n  location: PropTypes.string,\r\n  createdAt: PropTypes.string.isRequired\r\n};\r\n\r\nexport default PostContainer;\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"react-apollo-hooks\";\r\nimport Loader from \"../components/Loader\";\r\nimport Post from \"../components/Post\";\r\n\r\nconst FEED_QUERY = gql`\r\n  {\r\n    seeFeed {\r\n      id\r\n      location\r\n      caption\r\n      user {\r\n        id\r\n        avatar\r\n        name\r\n      }\r\n      files {\r\n        id\r\n        url\r\n      }\r\n      likeCount\r\n      isLiked\r\n      comments {\r\n        id\r\n        text\r\n        user {\r\n          id\r\n          name\r\n        }\r\n      }\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport default () => {\r\n  const { data, loading } = useQuery(FEED_QUERY);\r\n  return (\r\n    <Wrapper>\r\n      <Helmet>\r\n        <title>Feed | Prismagram</title>\r\n      </Helmet>\r\n      {loading && <Loader />}\r\n      {!loading && console.log(data)}\r\n      {!loading &&\r\n        data &&\r\n        data.seeFeed &&\r\n        data.seeFeed.map(post => (\r\n          <Post\r\n            key={post.id}\r\n            id={post.id}\r\n            location={post.location}\r\n            caption={post.caption}\r\n            user={post.user}\r\n            files={post.files}\r\n            likeCount={post.likeCount}\r\n            isLiked={post.isLiked}\r\n            comments={post.comments}\r\n            createdAt={post.createdAt}\r\n          />\r\n        ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 80vh;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.input`\r\n  border: 0;\r\n  border: ${props => props.theme.boxBorder};\r\n  border-radius: ${props => props.theme.borderRadius};\r\n  background-color: ${props => props.theme.bgColor};\r\n  height: 35px;\r\n  font-size: 12px;\r\n  padding: 0px 15px;\r\n`;\r\n\r\nconst Input = ({\r\n  placeholder,\r\n  required = true,\r\n  value,\r\n  onChange,\r\n  type = \"text\",\r\n  className\r\n}) => (\r\n  <Container\r\n    className={className}\r\n    placeholder={placeholder}\r\n    required={required}\r\n    value={value}\r\n    onChange={onChange}\r\n    type={type}\r\n  />\r\n);\r\n\r\nInput.propTypes = {\r\n  placeholder: PropTypes.string.isRequired,\r\n  required: PropTypes.bool,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  type: PropTypes.string\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Container = styled.button`\r\n  width: 100%;\r\n  border: 0;\r\n  border-radius: ${props => props.theme.borderRadius};\r\n  color: white;\r\n  font-weight: 600;\r\n  background-color: ${props => props.theme.blueColor};\r\n  text-align: center;\r\n  padding: 7px 0px;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Button = ({ text, onClick }) => (\r\n  <Container onClick={onClick}>{text}</Container>\r\n);\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\nimport Input from \"components/Input\";\r\nimport Button from \"components/Button\";\r\n\r\nconst Wrapper = styled.div`\r\n  min-height: 80vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\nconst Box = styled.div`\r\n  ${props => props.theme.whiteBox}\r\n  border-radius:0px;\r\n  width: 100%;\r\n  max-width: 350px;\r\n`;\r\n\r\nconst StateChanger = styled(Box)`\r\n  text-align: center;\r\n  padding: 20px 0px;\r\n`;\r\nconst Link = styled.span`\r\n  color: ${props => props.theme.blueColor};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Form = styled(Box)`\r\n  padding: 40px;\r\n  padding-bottom: 30px;\r\n  margin-bottom: 15px;\r\n  form {\r\n    width: 100%;\r\n    input {\r\n      width: 100%;\r\n      &:not(:last-child) {\r\n        margin-bottom: 7px;\r\n      }\r\n    }\r\n    button {\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ({\r\n  setAction,\r\n  action,\r\n  name,\r\n  password,\r\n  firstName,\r\n  lastName,\r\n  email,\r\n  onSubmit,\r\n  secret\r\n}) => (\r\n  <Wrapper>\r\n    <Form>\r\n      {action === \"logIn\" && (\r\n        <>\r\n          <Helmet>\r\n            <title>Log In | Prismagram</title>\r\n          </Helmet>\r\n          <form onSubmit={onSubmit}>\r\n            <Input placeholder={\"Email\"} {...email} type=\"email\" />\r\n            <Button text={\"Log in\"} />\r\n          </form>\r\n        </>\r\n      )}\r\n      {action === \"signUp\" && (\r\n        <>\r\n          <Helmet>\r\n            <title>Sign Up | Prismagram</title>\r\n          </Helmet>\r\n          <form onSubmit={onSubmit}>\r\n            <Input placeholder={\"First name\"} {...firstName} />\r\n            <Input placeholder={\"Last name\"} {...lastName} />\r\n            <Input placeholder={\"Email\"} {...email} type=\"email\" />\r\n            <Input placeholder={\"name\"} {...name} />\r\n            <Button text={\"Sign up\"} />\r\n          </form>\r\n        </>\r\n      )}\r\n      {action === \"confirm\" && (\r\n        <>\r\n          <Helmet>\r\n            <title>Confirm Secret | Prismagram</title>\r\n          </Helmet>\r\n          <form onSubmit={onSubmit}>\r\n            <Input placeholder=\"Paste your secret\" required {...secret} />\r\n            <Button text={\"Confirm\"} />\r\n          </form>\r\n        </>\r\n      )}\r\n    </Form>\r\n    {action !== \"confirm\" && (\r\n      <StateChanger>\r\n        {action === \"logIn\" ? (\r\n          <>\r\n            Don't have an account?{\" \"}\r\n            <Link onClick={() => setAction(\"signUp\")}>Sign up</Link>\r\n          </>\r\n        ) : (\r\n          <>\r\n            Have an account?{\" \"}\r\n            <Link onClick={() => setAction(\"logIn\")}>Log in</Link>\r\n          </>\r\n        )}\r\n      </StateChanger>\r\n    )}\r\n  </Wrapper>\r\n);\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const LOG_IN = gql`\r\n  mutation requestSecret($email: String!) {\r\n    requestSecret(email: $email)\r\n  }\r\n`;\r\n\r\nexport const CREATE_ACCOUNT = gql`\r\n  mutation createAccount(\r\n    $name: String!\r\n    $email: String!\r\n    $firstName: String\r\n    $lastName: String\r\n  ) {\r\n    createAccount(\r\n      name: $name\r\n      email: $email\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n    )\r\n  }\r\n`;\r\n\r\nexport const CONFIRM_SECRET = gql`\r\n  mutation confirmSecret($secret: String!, $email: String!) {\r\n    confirmSecret(secret: $secret, email: $email)\r\n  }\r\n`;\r\n\r\nexport const LOCAL_LOG_IN = gql`\r\n  mutation logUserIn($token: String!) {\r\n    logUserIn(token: $token) @client\r\n  }\r\n`;\r\n","import AuthContainer from \"./AuthContainer\";\r\n\r\nexport default AuthContainer;\r\n","import React, { useState } from \"react\";\r\nimport AuthPresenter from \"./AuthPresenter\";\r\nimport useInput from \"../../Hooks/useInput\";\r\nimport { useMutation } from \"react-apollo-hooks\";\r\nimport {\r\n  LOG_IN,\r\n  CREATE_ACCOUNT,\r\n  CONFIRM_SECRET,\r\n  LOCAL_LOG_IN\r\n} from \"./AuthQueries\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default () => {\r\n  const [action, setAction] = useState(\"logIn\");\r\n  const name = useInput(\"\");\r\n  const firstName = useInput(\"\");\r\n  const lastName = useInput(\"\");\r\n  const secret = useInput(\"\");\r\n  const email = useInput(\"\");\r\n  const [requestSecret] = useMutation(LOG_IN, {\r\n    update: (_, { data }) => {\r\n      const { requestSecret } = data;\r\n      if (!requestSecret) {\r\n        toast.error(\"You dont have an account yet, create one\");\r\n        //setTimeout(() => setAction(\"signUp\"), 3000); 자동으로 가입하기 창으로 넘어감.\r\n      } else {\r\n        toast.success(\"login secret sended!!\");\r\n        setAction(\"confirm\");\r\n      }\r\n    },\r\n    variables: { email: email.value }\r\n  });\r\n  const [createAccountMutation] = useMutation(CREATE_ACCOUNT, {\r\n    variables: {\r\n      email: email.value,\r\n      name: name.value,\r\n      firstName: firstName.value,\r\n      lastName: lastName.value\r\n    }\r\n  });\r\n  const [confirmSecretMutation] = useMutation(CONFIRM_SECRET, {\r\n    variables: {\r\n      email: email.value,\r\n      secret: secret.value\r\n    }\r\n  });\r\n\r\n  const [localLogInMutation] = useMutation(LOCAL_LOG_IN);\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    if (action === \"logIn\") {\r\n      if (email.value !== \"\") {\r\n        try {\r\n          await requestSecret();\r\n          // const secret = await requestSecret();\r\n          // console.log(secret);\r\n        } catch (error) {\r\n          console.log(error);\r\n          toast.error(\"Can't request secret, try again\");\r\n        }\r\n      } else {\r\n        toast.error(\"Email is required\");\r\n      }\r\n    } else if (action === \"signUp\") {\r\n      if (\r\n        email.value !== \"\" &&\r\n        name.value !== \"\" &&\r\n        firstName.value !== \"\" &&\r\n        lastName.value !== \"\"\r\n      ) {\r\n        try {\r\n          const {\r\n            data: { createAccount }\r\n          } = await createAccountMutation();\r\n          if (!createAccount) {\r\n            toast.success(\"Account Created! \");\r\n            setTimeout(() => setAction(\"logIn\"), 10);\r\n          } else {\r\n            toast.error(\"Can't create Account, try again\");\r\n          }\r\n        } catch (error) {\r\n          toast.error(error.message);\r\n        }\r\n      } else {\r\n        toast.error(\"All field are required\");\r\n      }\r\n    } else if (action === \"confirm\") {\r\n      if (secret.value !== \"\") {\r\n        try {\r\n          const {\r\n            data: { confirmSecret: token }\r\n          } = await confirmSecretMutation();\r\n          console.log(token);\r\n          //TODO : log user in JWT\r\n          if (token !== \"\" && token !== undefined) {\r\n            localLogInMutation({ variables: { token } });\r\n          } else {\r\n            throw Error();\r\n          }\r\n        } catch {\r\n          toast.error(\r\n            \"cant confirm secret, wait a miniute and check your email again \"\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthPresenter\r\n      setAction={setAction}\r\n      action={action}\r\n      name={name}\r\n      firstName={firstName}\r\n      lastName={lastName}\r\n      email={email}\r\n      onSubmit={onSubmit}\r\n      secret={secret}\r\n    ></AuthPresenter>\r\n  );\r\n};\r\n\r\n/** 컨테이너\r\n *  모든 state,query,data,hook 전부 들어간다.\r\n *  프리젠터\r\n *  디자인 CSS\r\n */\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const FOLLOW = gql`\r\n  mutation follow($id: String!) {\r\n    follow(id: $id)\r\n  }\r\n`;\r\n\r\nexport const UNFOLLOW = gql`\r\n  mutation unfollow($id: String!) {\r\n    unfollow(id: $id)\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Button from \"../Button\";\r\n\r\nexport default ({ isFollowing, onClick }) => (\r\n  <Button text={isFollowing ? \"Unfollow\" : \"Follow\"} onClick={onClick} />\r\n);\r\n","import FollowButtonContainer from \"./FollowButtonContainer\";\r\nexport default FollowButtonContainer;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useMutation } from \"react-apollo-hooks\";\r\nimport { FOLLOW, UNFOLLOW } from \"./FollowButtonQueries\";\r\nimport FollowButtonPresenter from \"./FollowButtonPresenter\";\r\n\r\nconst FollowButtonContainer = ({ isFollowing, id }) => {\r\n  const [isFollowingS, setIsFollowing] = useState(isFollowing);\r\n  const [followMutation] = useMutation(FOLLOW, { variables: { id } });\r\n  const [unfollowMutation] = useMutation(UNFOLLOW, { variables: { id } });\r\n\r\n  const onClick = () => {\r\n    if (isFollowingS === true) {\r\n      setIsFollowing(false);\r\n      unfollowMutation();\r\n    } else {\r\n      setIsFollowing(true);\r\n      followMutation();\r\n    }\r\n  };\r\n  return <FollowButtonPresenter onClick={onClick} isFollowing={isFollowingS} />;\r\n};\r\n\r\nFollowButtonContainer.propTypes = {\r\n  isFollowing: PropTypes.bool.isRequired,\r\n  id: PropTypes.string.isRequired\r\n};\r\n\r\nexport default FollowButtonContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport Avatar from \"./Avatar\";\r\nimport FatText from \"./FatText\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\nconst Card = styled.div`\r\n  ${props => props.theme.whiteBox}\r\n  display:flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n`;\r\n\r\nconst EAvatar = styled(Avatar)`\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst ELink = styled(Link)`\r\n  color: inherit;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst UserCard = ({ id, name, isFollowing, url, isSelf }) => (\r\n  <Card>\r\n    <EAvatar url={url} size={\"md\"} />\r\n    <ELink to={`/${name}`}>\r\n      <FatText text={name} />\r\n    </ELink>\r\n    {!isSelf && <FollowButton id={id} isFollowing={isFollowing} />}\r\n  </Card>\r\n);\r\n\r\nUserCard.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isFollowing: PropTypes.bool.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n  isSelf: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default UserCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { HeartFull, CommentFull } from \"./Icons\";\r\n\r\nconst Overlay = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  opacity: 0;\r\n  transition: opacity 0.3s linear;\r\n  svg {\r\n    fill: white;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  background-image: url(${props => props.bg});\r\n  background-size: cover;\r\n  cursor: pointer;\r\n  &:hover {\r\n    ${Overlay} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Number = styled.div`\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  &:first-child {\r\n    margin-right: 30px;\r\n  }\r\n`;\r\n\r\nconst NumberText = styled.span`\r\n  margin-left: 10px;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst SquarePost = ({ likeCount, commentCount, file }) => (\r\n  <Container bg={file.url}>\r\n    <Overlay>\r\n      <Number>\r\n        <HeartFull />\r\n        <NumberText>{likeCount}</NumberText>\r\n      </Number>\r\n      <Number>\r\n        <CommentFull />\r\n        <NumberText>{commentCount}</NumberText>\r\n      </Number>\r\n    </Overlay>\r\n  </Container>\r\n);\r\n\r\nSquarePost.propTypes = {\r\n  likeCount: PropTypes.number.isRequired,\r\n  commentCount: PropTypes.number.isRequired,\r\n  file: PropTypes.object.isRequired\r\n};\r\n\r\nexport default SquarePost;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport FatText from \"../../components/FatText\";\r\nimport Loader from \"../../components/Loader\";\r\nimport UserCard from \"../../components/UserCard\";\r\nimport SquarePost from \"../../components/SquarePost\";\r\n\r\nconst Wrapper = styled.div`\r\n  height: 50vh;\r\n  text-align: center;\r\n`;\r\n\r\nconst Section = styled.div`\r\n  margin-bottom: 50px;\r\n  display: grid;\r\n  grid-gap: 25px;\r\n  grid-template-columns: repeat(4, 160px);\r\n  grid-template-rows: 160px;\r\n  grid-auto-rows: 160px;\r\n`;\r\n\r\nconst PostSection = styled(Section)`\r\n  grid-template-columns: repeat(4, 200px);\r\n  grid-template-rows: 200px;\r\n  grid-auto-rows: 200px;\r\n`;\r\n\r\nconst SearchPresenter = ({ searchTerm, loading, data }) => {\r\n  if (searchTerm === undefined) {\r\n    return (\r\n      <Wrapper>\r\n        <FatText text=\"Search for something\" />\r\n      </Wrapper>\r\n    );\r\n  } else if (loading === true) {\r\n    return (\r\n      <Wrapper>\r\n        <Loader />\r\n      </Wrapper>\r\n    );\r\n  } else if (data && data.searchUser && data.searchPost) {\r\n    return (\r\n      <Wrapper>\r\n        <Section>\r\n          {data.searchUser.length === 0 ? (\r\n            <FatText text=\"No Users Found\" />\r\n          ) : (\r\n            data.searchUser.map(user => (\r\n              <UserCard\r\n                key={user.id}\r\n                name={user.name}\r\n                isFollowing={user.isFollowing}\r\n                url={user.avatar}\r\n                isSelf={user.isSelf}\r\n                id={user.id}\r\n              />\r\n            ))\r\n          )}\r\n        </Section>\r\n        <PostSection>\r\n          {data.searchPost.length === 0 ? (\r\n            <FatText text=\"No Posts Found\" />\r\n          ) : (\r\n            data.searchPost.map(post => (\r\n              <SquarePost\r\n                key={post.id}\r\n                likeCount={post.likeCount}\r\n                commentCount={post.commentCount}\r\n                file={post.files[0]}\r\n              />\r\n            ))\r\n          )}\r\n        </PostSection>\r\n      </Wrapper>\r\n    );\r\n  } else {\r\n    return (\r\n      <Wrapper>\r\n        <FatText text=\"Search for nothing\" />\r\n      </Wrapper>\r\n    );\r\n  }\r\n};\r\n\r\nSearchPresenter.propTypes = {\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const SEARCH = gql`\r\n  query search($term: String!) {\r\n    searchPost(term: $term) {\r\n      id\r\n      files {\r\n        url\r\n      }\r\n      likeCount\r\n      commentCount\r\n    }\r\n    searchUser(term: $term) {\r\n      id\r\n      avatar\r\n      name\r\n      isFollowing\r\n      isSelf\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { useQuery } from \"react-apollo-hooks\";\r\nimport { SEARCH } from \"./SearchQueries\";\r\n\r\nexport default withRouter(({ location: { search } }) => {\r\n  const term = search.split(\"=\")[1];\r\n  const { data, loading } = useQuery(SEARCH, {\r\n    skip: term === undefined,\r\n    variables: {\r\n      term\r\n    }\r\n  });\r\n  return <SearchPresenter searchTerm={term} loading={loading} data={data} />;\r\n});\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Avatar from \"../../components/Avatar\";\r\nimport FatText from \"../../components/FatText\";\r\nimport FollowButton from \"../../components/FollowButton\";\r\nimport SquarePost from \"../../components/SquarePost\";\r\nimport Button from \"../../components/Button\";\r\n\r\nconst Wrapper = styled.div`\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst HeaderColumn = styled.div``;\r\n\r\nconst UsernameRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Username = styled.span`\r\n  font-size: 26px;\r\n  display: block;\r\n`;\r\n\r\nconst Counts = styled.ul`\r\n  display: flex;\r\n  margin: 15px 0px;\r\n`;\r\n\r\nconst Count = styled.li`\r\n  font-size: 16px;\r\n  &:not(:last-child) {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nconst FullName = styled(FatText)`\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Bio = styled.p`\r\n  margin: 10px 0px;\r\n`;\r\n\r\nconst Posts = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 200px);\r\n  grid-template-rows: 200px;\r\n  grid-auto-rows: 200px;\r\n`;\r\n\r\nexport default ({ loading, data, logOut }) => {\r\n  if (loading === true) {\r\n    return (\r\n      <Wrapper>\r\n        <Loader />\r\n      </Wrapper>\r\n    );\r\n  } else if (!loading && data && data.seeUser) {\r\n    const {\r\n      seeUser: {\r\n        id,\r\n        avatar,\r\n        name,\r\n        fullName,\r\n        isFollowing,\r\n        isSelf,\r\n        bio,\r\n        followingCount,\r\n        followersCount,\r\n        postsCount,\r\n        posts\r\n      }\r\n    } = data;\r\n    return (\r\n      <Wrapper>\r\n        <Helmet>\r\n          <title>{name} | Prismagram</title>\r\n        </Helmet>\r\n        <Header>\r\n          <HeaderColumn>\r\n            <Avatar size=\"lg\" url={avatar} />\r\n          </HeaderColumn>\r\n          <HeaderColumn>\r\n            <UsernameRow>\r\n              <Username>{name}</Username>{\" \"}\r\n              {isSelf ? (\r\n                <Button onClick={e => logOut} text=\"Log Out\" />\r\n              ) : (\r\n                <FollowButton isFollowing={isFollowing} id={id} />\r\n              )}\r\n            </UsernameRow>\r\n            <Counts>\r\n              <Count>\r\n                <FatText text={String(postsCount)} /> posts\r\n              </Count>\r\n              <Count>\r\n                <FatText text={String(followersCount)} /> followers\r\n              </Count>\r\n              <Count>\r\n                <FatText text={String(followingCount)} /> following\r\n              </Count>\r\n            </Counts>\r\n            <FullName text={fullName} />\r\n            <Bio>{bio}</Bio>\r\n          </HeaderColumn>\r\n        </Header>\r\n        <Posts>\r\n          {posts &&\r\n            posts.map(post => (\r\n              <SquarePost\r\n                key={post.id}\r\n                likeCount={post.likeCount}\r\n                commentCount={post.commentCount}\r\n                file={post.files[0]}\r\n              />\r\n            ))}\r\n        </Posts>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n","import React from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useQuery, useMutation } from \"react-apollo-hooks\";\r\nimport ProfilePresenter from \"./ProfilePresenter\";\r\n\r\nconst GET_USER = gql`\r\n  query seeUser($name: String!) {\r\n    seeUser(name: $name) {\r\n      id\r\n      avatar\r\n      name\r\n      fullName\r\n      isFollowing\r\n      isSelf\r\n      bio\r\n      followingCount\r\n      followersCount\r\n      postsCount\r\n      posts {\r\n        id\r\n        files {\r\n          url\r\n        }\r\n        likeCount\r\n        commentCount\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOG_OUT = gql`\r\n  mutation logUserOut {\r\n    logUserOut @client\r\n  }\r\n`;\r\n\r\nexport default withRouter(\r\n  ({\r\n    match: {\r\n      params: { username }\r\n    }\r\n  }) => {\r\n    const { data, loading } = useQuery(GET_USER, {\r\n      variables: { name: username }\r\n    });\r\n    const logOut = useMutation(LOG_OUT);\r\n    return <ProfilePresenter loading={loading} logOut={logOut} data={data} />;\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Feed from \"../Routes/Feed\";\r\nimport Auth from \"../Routes/Auth\";\r\n\r\nimport Explore from \"../Routes/Explore\";\r\nimport Search from \"../Routes/Search\";\r\nimport Profile from \"../Routes/Profile\";\r\n\r\nconst LoggedInRoutes = () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={Feed}></Route>\r\n    {/* <Route path=\"/explore\" component={Explore} />\r\n    <Route path=\"/search\" component={Search} />\r\n    <Route path=\"/:username\" component={Profile} />\r\n    <Redirect from=\"*\" to=\"/\" /> */}\r\n  </Switch>\r\n);\r\n\r\nconst LoggedOutRoutes = () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={Auth}></Route>\r\n    <Redirect from=\"*\" to=\"/\" />\r\n  </Switch>\r\n);\r\n\r\nconst AppRouter = ({ isLoggedIn }) =>\r\n  isLoggedIn ? <LoggedInRoutes /> : <LoggedOutRoutes />;\r\n\r\nAppRouter.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Footer = styled.footer`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  margin: 50px 0px;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  &:not(:last-child) {\r\n    margin-right: 16px;\r\n  }\r\n`;\r\n\r\nconst Link = styled.a`\r\n  color: ${props => props.theme.darkBlueColor};\r\n`;\r\n\r\nconst Copyright = styled.span`\r\n  color: ${props => props.theme.darkGreyColor};\r\n`;\r\n\r\nexport default () => (\r\n  <Footer>\r\n    <List>\r\n      <ListItem>\r\n        <Link href=\"#\">about us</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">support</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">press</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">api</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">jobs</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">privacy</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">terms</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">directory</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">profiles</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">hashtags</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">language</Link>\r\n      </ListItem>\r\n    </List>\r\n    <Copyright>Instaclone {new Date().getFullYear()} &copy;</Copyright>\r\n  </Footer>\r\n);\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const ME = gql`\r\n  {\r\n    me {\r\n      name\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { useQuery } from \"react-apollo-hooks\";\r\n\r\nimport Input from \"./Input\";\r\nimport useInput from \"../Hooks/useInput\";\r\nimport { Compass, HeartEmpty, User, Logo } from \"./Icons\";\r\nimport { ME } from \"../SharedQueries\";\r\n\r\nconst HeaderComponent = ({ history }) => {\r\n  const search = useInput(\"\");\r\n  const { data } = useQuery(ME);\r\n  const onSearchSubmit = e => {\r\n    e.preventDefault();\r\n    history.push(`/search?term=${search.value}`);\r\n  };\r\n  return (\r\n    <Header>\r\n      <HeaderWrapper>\r\n        <HeaderColumn>\r\n          <Link to=\"/\">\r\n            <Logo />\r\n          </Link>\r\n        </HeaderColumn>\r\n        <HeaderColumn>\r\n          <form onSubmit={onSearchSubmit}>\r\n            <SearchInput\r\n              value={search.value}\r\n              onChange={search.onChange}\r\n              placeholder=\"Search\"\r\n            />\r\n          </form>\r\n        </HeaderColumn>\r\n        <HeaderColumn>\r\n          <HeaderLink to=\"/explore\">\r\n            <Compass />\r\n          </HeaderLink>\r\n          <HeaderLink to=\"/notifications\">\r\n            <HeartEmpty />\r\n          </HeaderLink>\r\n          {!data ? (\r\n            <HeaderLink to=\"/#\">\r\n              <User />\r\n            </HeaderLink>\r\n          ) : (\r\n            <HeaderLink to={data.me.name}>\r\n              <User />\r\n            </HeaderLink>\r\n          )}\r\n        </HeaderColumn>\r\n      </HeaderWrapper>\r\n    </Header>\r\n  );\r\n};\r\nexport default withRouter(HeaderComponent);\r\n\r\nconst Header = styled.header`\r\n  width: 100%;\r\n  border: 0;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: white;\r\n  border-bottom: ${props => props.theme.boxBorder};\r\n  border-radius: 0px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 25px 0px;\r\n`;\r\n\r\nconst HeaderWrapper = styled.div`\r\n  width: 100%;\r\n  max-width: ${props => props.theme.maxWidth};\r\n  display: flex;\r\n  justify-content: center;\r\n  z-index: 2;\r\n`;\r\n\r\nconst HeaderColumn = styled.div`\r\n  width: 33%;\r\n  text-align: center;\r\n  &:first-child {\r\n    margin-right: auto;\r\n    text-align: left;\r\n  }\r\n  &:last-child {\r\n    margin-left: auto;\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nconst SearchInput = styled(Input)`\r\n  background-color: ${props => props.theme.bgColor};\r\n  padding: 5px;\r\n  font-size: 14px;\r\n  border-radius: 3px;\r\n  height: auto;\r\n  text-align: center;\r\n  width: 70%;\r\n  &::placeholder {\r\n    opacity: 0.8;\r\n    font-weight: 200;\r\n  }\r\n`;\r\n\r\nconst HeaderLink = styled(Link)`\r\n  &:not(:last-child) {\r\n    margin-right: 30px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport GlobalStyles from \"../Styles/GlobalStyles\";\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"react-apollo-hooks\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport Theme from \"../Styles/Theme\";\r\nimport Routes from \"./Routes\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\n\r\nconst QUERY = gql`\r\n  {\r\n    isLoggedIn @client\r\n  }\r\n`;\r\nconst Wrapper = styled.div`\r\n  margin: 0 auto;\r\n  max-width: ${props => props.theme.maxWidth};\r\n  width: 100%;\r\n`;\r\n\r\nexport default () => {\r\n  const {\r\n    data: { isLoggedIn }\r\n  } = useQuery(QUERY);\r\n\r\n  return (\r\n    <ThemeProvider theme={Theme}>\r\n      <>\r\n        <GlobalStyles />\r\n        <HashRouter>\r\n          <Wrapper>\r\n            <>\r\n              {isLoggedIn && <Header />}\r\n              <Routes isLoggedIn={isLoggedIn} />\r\n              <Footer />\r\n            </>\r\n          </Wrapper>\r\n        </HashRouter>\r\n        <ToastContainer position={toast.POSITION.BOTTOM_LEFT} />\r\n      </>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","// defaults는 Graphql문법이 아닌, state  개념이다.\r\nexport const defaults = {\r\n  isLoggedIn: Boolean(localStorage.getItem(\"token\")) || false\r\n};\r\n//resolvers의 세번쨰 인자가 의문이네... 두번째 인자도, 기본 리소버랑 다른 매커니즘인듯\r\nexport const resolvers = {\r\n  Mutation: {\r\n    logUserIn: (_, { token }, { cache }) => {\r\n      localStorage.setItem(\"token\", token);\r\n      cache.writeData({\r\n        data: {\r\n          isLoggedIn: true\r\n        }\r\n      });\r\n      return null;\r\n    },\r\n    logUserOut: (_, __, { cache }) => {\r\n      localStorage.removeItem(\"token\");\r\n      //window.location.reload();\r\n      window.location = \"/\";\r\n      return null;\r\n    }\r\n  }\r\n};\r\n","import ApolloClient from \"apollo-boost\";\r\nimport { defaults, resolvers } from \"./LocalState\";\r\n\r\nconsole.log();\r\n\r\nexport default new ApolloClient({\r\n  uri: \"http://133.186.241.220:7000/\",\r\n  clientState: {\r\n    defaults,\r\n    resolvers,\r\n  },\r\n  headers: {\r\n    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport Client from \"./Apollo/Client\";\r\nimport { ApolloProvider } from \"react-apollo-hooks\";\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={Client}>\r\n    <App />\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}